[{"/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/index.tsx":"1","/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/global/config.ts":"2","/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/plugins/unpkg-path-plugin.ts":"3","/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/plugins/fetch-plugin.ts":"4","/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/components/code-editor.tsx":"5"},{"size":5296,"mtime":1674655406833,"results":"6","hashOfConfig":"7"},{"size":131,"mtime":1674649170375,"results":"8","hashOfConfig":"7"},{"size":1240,"mtime":1674633669408,"results":"9","hashOfConfig":"7"},{"size":4133,"mtime":1674638933457,"results":"10","hashOfConfig":"7"},{"size":2457,"mtime":1674663236442,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1gg7znn",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/index.tsx",["24","25","26","27","28","29","30","31"],"import 'bulmaswatch/superhero/bulmaswatch.min.css';\nimport * as esbuild from 'esbuild-wasm';\nimport React, {useEffect, useState, useRef} from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport {debug} from \"./global/config\";\nimport {unpkgPathPlugin} from \"./plugins/unpkg-path-plugin\";\nimport {fetchPlugin} from \"./plugins/fetch-plugin\";\nimport CodeEditor from \"./components/code-editor\";\n\n\nconst defaultCode = `\\\nconst a = 1;\nconsole.log(a);\n`;\n\nconst defaultReactCode = `\\\nimport React from 'react';\nconsole.log(React);\n`;\n\nconst defaultPackageTestCode = `\\\nimport pkg from 'nested-test-pkg';\nconsole.log(pkg);\n`;\n\nconst defaultCssCode = `\\\nimport 'bulma/css/bulma.css';\n`\n\nconst defaultJsCssCode = `\\\nimport pkg from 'tiny-test-pkg';\nimport 'bulma/css/bulma.css';\n`\nconst defaultReactComponentCode = `\\\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => <h1>Hi there!</h1>\n\nReactDOM.render(\n  <App/>,\n  document.querySelector('#root')\n);\n`\n\nconst defaultErrorCode = `\\\nconsole.base();\n`\nconst evalInMain = false;\nconst showCodePreview = false;\nconst eagerBundling = false;\n\nconst App = () => {\n    const serviceRef = useRef<any>();\n    const iframeRef = useRef<any>();\n    const [input, setInput] = useState(defaultErrorCode);\n    const [code, setCode] = useState('');\n\n    const startService = async () => {\n        serviceRef.current =  await esbuild.startService({\n            worker: true,\n            // wasmURL: '/esbuild.wasm' // picks esbuild.wasm placed in public folder\n            wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm'\n        });\n    };\n\n    useEffect(() => {\n        startService()\n    }, []);\n\n    const onSubmit = async (value: string|null) => {\n        if (debug) {\n            console.log(input);\n        }\n\n        if (!serviceRef.current) {\n            return;\n        }\n\n        iframeRef.current.srcdoc = html;\n\n        let startCode;\n        if (eagerBundling) {\n            startCode = value as string;\n        } else {\n            startCode = input;\n        }\n        // Disabled when we switched over to build instead of transform\n        //\n        // console.log(serviceRef.current);\n        // const result = await serviceRef.current.transform(input, {\n        //     loader: 'jsx',\n        //     target: 'es2015'\n        // });\n\n        // The build call using esbuild which creates a bundle\n        const result = await serviceRef.current.build({\n            entryPoints: ['index.jsx'],\n            bundle: true,\n            write: false,\n            // TBVE: Check if we can create an inmemory file and pass path to it\n            plugins: [\n                unpkgPathPlugin(),\n                fetchPlugin(startCode)\n            ],\n            define: {\n                'process.env.NODE_ENV': '\"production\"',\n                global: 'window'\n            }\n        })\n\n        if (debug) {\n            console.log(`result:`, result.outputFiles[0].text);\n        }\n\n        setCode(result.outputFiles[0].text);\n        iframeRef.current.contentWindow.postMessage(result.outputFiles[0].text, '*');\n\n        if (evalInMain) {\n            try {\n                // The eval here causes the generated js and css to be applied on current application\n                eval(result.outputFiles[0].text);\n            } catch (error) {\n                alert(error);\n            }\n        }\n    }\n\n    const fontSize = \"1.2em\";\n\n    const htmlSnippetUnsed = `\n    <script>\n        ${code}\n    </script>\n    `\n    const html = `\\\n    <html>\n    <head></head>\n    <body>\n        <div id=\"root\"></div>\n        <script>\n            window.addEventListener('message', (event) => {\n              try {\n                eval(event.data);  \n              } catch (err) {\n                const root = document.querySelector('#root');\n                root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n                console.error(err);\n              }\n            }, false);\n        </script>\n    </body>\n    </html>\n    `;\n\n    return (\n        <div>\n            <CodeEditor\n                initialValue=\"const a = 1;\"\n                onChange={setInput}\n            />\n            <textarea\n                value={input}\n                onChange={e => {\n                    setInput(e.target.value);\n                    if (eagerBundling) {\n                        onSubmit(e.target.value);\n                    }\n                }}\n                cols={80}\n                rows={10}\n                style={{fontSize}}\n            />\n            <div>\n                {!eagerBundling &&\n                    <button\n                        onClick={e => onSubmit(null)}\n                        style={{fontSize}}\n                    >\n                        Submit\n                    </button>\n                }\n            </div>\n\n            <iframe\n                ref={iframeRef}\n                title=\"userCode\"\n                sandbox=\"allow-scripts\"\n                srcDoc={html}\n            />\n\n            {showCodePreview && <pre style={{fontSize}}>{code}</pre>}\n        </div>\n    );\n}\n\n\nconst rootElement = document.getElementById(\"root\") as HTMLElement;\nconst root = createRoot(rootElement);\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);",["32","33"],"/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/global/config.ts",[],"/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/plugins/unpkg-path-plugin.ts",[],"/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/plugins/fetch-plugin.ts",[],"/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/components/code-editor.tsx",[],{"ruleId":"34","severity":1,"message":"35","line":11,"column":7,"nodeType":"36","messageId":"37","endLine":11,"endColumn":18},{"ruleId":"34","severity":1,"message":"38","line":16,"column":7,"nodeType":"36","messageId":"37","endLine":16,"endColumn":23},{"ruleId":"34","severity":1,"message":"39","line":21,"column":7,"nodeType":"36","messageId":"37","endLine":21,"endColumn":29},{"ruleId":"34","severity":1,"message":"40","line":26,"column":7,"nodeType":"36","messageId":"37","endLine":26,"endColumn":21},{"ruleId":"34","severity":1,"message":"41","line":30,"column":7,"nodeType":"36","messageId":"37","endLine":30,"endColumn":23},{"ruleId":"34","severity":1,"message":"42","line":34,"column":7,"nodeType":"36","messageId":"37","endLine":34,"endColumn":32},{"ruleId":"43","severity":1,"message":"44","line":122,"column":17,"nodeType":"45","messageId":"46","endLine":122,"endColumn":21},{"ruleId":"34","severity":1,"message":"47","line":131,"column":11,"nodeType":"36","messageId":"37","endLine":131,"endColumn":27},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},"@typescript-eslint/no-unused-vars","'defaultCode' is assigned a value but never used.","Identifier","unusedVar","'defaultReactCode' is assigned a value but never used.","'defaultPackageTestCode' is assigned a value but never used.","'defaultCssCode' is assigned a value but never used.","'defaultJsCssCode' is assigned a value but never used.","'defaultReactComponentCode' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","'htmlSnippetUnsed' is assigned a value but never used.","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-global-assign","no-unsafe-negation"]