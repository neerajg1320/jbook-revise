[{"/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/index.tsx":"1","/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/global/config.ts":"2","/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/plugins/unpkg-path-plugin.ts":"3","/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/plugins/fetch-plugin.ts":"4","/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/components/editor/code-editor.tsx":"5","/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/components/preview.tsx":"6"},{"size":4154,"mtime":1674664460470,"results":"7","hashOfConfig":"8"},{"size":131,"mtime":1674649170375,"results":"9","hashOfConfig":"8"},{"size":1240,"mtime":1674633669408,"results":"10","hashOfConfig":"8"},{"size":4133,"mtime":1674638933457,"results":"11","hashOfConfig":"8"},{"size":2457,"mtime":1674663236442,"results":"12","hashOfConfig":"8"},{"size":1060,"mtime":1674664290769,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"1gg7znn",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/index.tsx",["28","29","30","31","32","33","34"],"import 'bulmaswatch/superhero/bulmaswatch.min.css';\nimport * as esbuild from 'esbuild-wasm';\nimport React, {useEffect, useState, useRef} from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport {debug} from \"./global/config\";\nimport {unpkgPathPlugin} from \"./plugins/unpkg-path-plugin\";\nimport {fetchPlugin} from \"./plugins/fetch-plugin\";\nimport CodeEditor from \"./components/editor/code-editor\";\nimport Preview from \"./components/preview\";\n\n\nconst defaultCode = `\\\nconst a = 1;\nconsole.log(a);\n`;\n\nconst defaultReactCode = `\\\nimport React from 'react';\nconsole.log(React);\n`;\n\nconst defaultPackageTestCode = `\\\nimport pkg from 'nested-test-pkg';\nconsole.log(pkg);\n`;\n\nconst defaultCssCode = `\\\nimport 'bulma/css/bulma.css';\n`\n\nconst defaultJsCssCode = `\\\nimport pkg from 'tiny-test-pkg';\nimport 'bulma/css/bulma.css';\n`\nconst defaultReactComponentCode = `\\\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => <h1>Hi there!</h1>\n\nReactDOM.render(\n  <App/>,\n  document.querySelector('#root')\n);\n`\n\nconst defaultErrorCode = `\\\nconsole.base();\n`\nconst evalInMain = false;\nconst showCodePreview = false;\nconst eagerBundling = false;\n\nconst App = () => {\n    const serviceRef = useRef<any>();\n\n    const [input, setInput] = useState(defaultErrorCode);\n    const [code, setCode] = useState('');\n\n    const startService = async () => {\n        serviceRef.current =  await esbuild.startService({\n            worker: true,\n            // wasmURL: '/esbuild.wasm' // picks esbuild.wasm placed in public folder\n            wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm'\n        });\n    };\n\n    useEffect(() => {\n        startService()\n    }, []);\n\n    const onSubmit = async (value: string|null) => {\n        if (debug) {\n            console.log(input);\n        }\n\n        if (!serviceRef.current) {\n            return;\n        }\n\n        let startCode;\n        if (eagerBundling) {\n            startCode = value as string;\n        } else {\n            startCode = input;\n        }\n\n        // The build call using esbuild which creates a bundle\n        const result = await serviceRef.current.build({\n            entryPoints: ['index.jsx'],\n            bundle: true,\n            write: false,\n            // TBVE: Check if we can create an inmemory file and pass path to it\n            plugins: [\n                unpkgPathPlugin(),\n                fetchPlugin(startCode)\n            ],\n            define: {\n                'process.env.NODE_ENV': '\"production\"',\n                global: 'window'\n            }\n        })\n\n        if (debug) {\n            console.log(`result:`, result.outputFiles[0].text);\n        }\n\n        setCode(result.outputFiles[0].text);\n\n        if (evalInMain) {\n            try {\n                // The eval here causes the generated js and css to be applied on current application\n                eval(result.outputFiles[0].text);\n            } catch (error) {\n                alert(error);\n            }\n        }\n    }\n\n    const fontSize = \"1.2em\";\n\n    return (\n        <div>\n            <CodeEditor\n                initialValue=\"const a = 1;\"\n                onChange={setInput}\n            />\n            <textarea\n                value={input}\n                onChange={e => {\n                    setInput(e.target.value);\n                    if (eagerBundling) {\n                        onSubmit(e.target.value);\n                    }\n                }}\n                cols={80}\n                rows={10}\n                style={{fontSize}}\n            />\n            <div>\n                {!eagerBundling &&\n                    <button\n                        onClick={e => onSubmit(null)}\n                        style={{fontSize}}\n                    >\n                        Submit\n                    </button>\n                }\n            </div>\n\n            <Preview code={code} />\n\n            {showCodePreview && <pre style={{fontSize}}>{code}</pre>}\n        </div>\n    );\n}\n\n\nconst rootElement = document.getElementById(\"root\") as HTMLElement;\nconst root = createRoot(rootElement);\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);","/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/global/config.ts",[],["35","36"],"/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/plugins/unpkg-path-plugin.ts",[],"/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/plugins/fetch-plugin.ts",[],"/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/components/editor/code-editor.tsx",[],"/Users/neeraj/Projects/Practice/Typescript/Udemy-StephenGrider/jbook-revise/src/components/preview.tsx",[],{"ruleId":"37","severity":1,"message":"38","line":12,"column":7,"nodeType":"39","messageId":"40","endLine":12,"endColumn":18},{"ruleId":"37","severity":1,"message":"41","line":17,"column":7,"nodeType":"39","messageId":"40","endLine":17,"endColumn":23},{"ruleId":"37","severity":1,"message":"42","line":22,"column":7,"nodeType":"39","messageId":"40","endLine":22,"endColumn":29},{"ruleId":"37","severity":1,"message":"43","line":27,"column":7,"nodeType":"39","messageId":"40","endLine":27,"endColumn":21},{"ruleId":"37","severity":1,"message":"44","line":31,"column":7,"nodeType":"39","messageId":"40","endLine":31,"endColumn":23},{"ruleId":"37","severity":1,"message":"45","line":35,"column":7,"nodeType":"39","messageId":"40","endLine":35,"endColumn":32},{"ruleId":"46","severity":1,"message":"47","line":113,"column":17,"nodeType":"48","messageId":"49","endLine":113,"endColumn":21},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},"@typescript-eslint/no-unused-vars","'defaultCode' is assigned a value but never used.","Identifier","unusedVar","'defaultReactCode' is assigned a value but never used.","'defaultPackageTestCode' is assigned a value but never used.","'defaultCssCode' is assigned a value but never used.","'defaultJsCssCode' is assigned a value but never used.","'defaultReactComponentCode' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-global-assign","no-unsafe-negation"]